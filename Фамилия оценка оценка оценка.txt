Имеется файл с данными по успеваемости абитуриентов. Он представляет из себя набор строк, где в каждой строке записана следующая информация:

Фамилия;Оценка_по_математике;Оценка_по_физике;Оценка_по_русскому_языку

Поля внутри строки разделены точкой с запятой, оценки — целые числа.

Напишите программу, которая считывает файл с подобной структурой и для каждого абитуриента выводит его среднюю оценку по этим трём предметам на отдельной строке, соответствующей этому абитуриенту.

Также в конце файла, на отдельной строке, через пробел запишите средние баллы по математике, физике и русскому языку по всем абитуриентам
_____________________________________________________________________________________
out1=""
out2=""
b= []
with open('test.txt') as inf:                 # Считываем до конца
	for line in inf:
		line = line.strip().split(";")
		line = line[1:]
		b += line 		
		out=((float(line[0]) + float(line[1]) + float(line[2])) / 3 )
		out1+=(str(out)+"\n")                # средний бал ученика
b=([int(i) for i in b])                      # Список оценок
b1 = b[0::3]                                 # Срез по предметам
b2 = b[1::3]
b3 = b[2::3]
suma=0
for element in b1:
    suma+=element
out21=suma/len(b1)                           # средний бал 1 предмета
suma=0 
for element in b2:
    suma+=element
out22=str(suma/len(b2))                      # средний бал 2 предмета             
suma=0 
for element in b3:                       
    suma+=element
out23= str(suma/len(b3))                     # средний бал 3 предмета
out2= str(out21) +" "+ str(out22) +" "+ str(out23)
with open("test_out.txt", "w") as ouf:       # Записываем а другой файл
	ouf.write(str(out1))
	ouf.write(str(out2))
________________________________________________________________________

with open('dataset_3363_4.txt') as inf:     # Способ решения через словарь
    s = {}
    for i in inf:
        line = i.strip().split(';')
        dict = {line[0]:[int(line[1]), int(line[2]), int(line[3])]}
        s.update(dict)

with open('out.txt', 'w') as ouf:
    m, n, r = 0, 0, 0
    q = len(s.keys())
    for key in s.keys():
        b = (s[key][0] + s[key][1] + s[key][2]) / 3
        print(b)
        ouf.write(str(b))
        ouf.write('\n')
        m += s[key][0]
        n += s[key][1]
        r += s[key][2]
    ouf.write(str(m/q)+' '+str(n/q)+' '+str(r/q))
________________________________________________________________________
x = []
matan = 0.0
fiz = 0.0
rus = 0.0
with open("dataset_3363_4.txt") as inf:
    for line in inf:
        line = line.strip().lower().split(";")
        x.append(line)
for i in range(len(x)):
    sum = (int(x[i][1]) + int(x[i][2]) + int(x[i][3]))/3
    matan += (int(x[i][1]))
    fiz += (int(x[i][2]))
    rus += (int(x[i][3]))
print(matan/(len(x)),fiz/len(x),rus/(len(x)))
________________________________________________________________________
import re
file_name = 'dataset_3363_4.txt'
mat, fiz, rus, average_rating, matrix = [], [], [], [], []
with open(file_name) as file_object:    
    contents = file_object.read().strip().split('\n')
for i in contents:                     #формируем матрицу из списков оценок без фамилмй
    matrix.append(re.findall('\d+', i))
for i in matrix:                       #переводим элементы матрицы из строкового вида в числовой   
    for id, item in enumerate(i):
        i[id] = int(item)        
        if id  == 0:                   #формируем списки с оценками по предметам
            mat.append(int(item))
        elif id == 1:
            fiz.append(int(item))
        elif id == 2:
            rus.append(int(item))
mat_s = round(sum(mat)/len(mat), 9)   #вычисляем среднее значение по каждому предмету, округляем до 9 знака
fiz_s = round(sum(fiz)/len(fiz), 9)
rus_s = round(sum(rus)/len(rus), 9)
for i in matrix:                      #формируем список из средних оценок по студенту, округляем до 9 знака
    average_rating.append(round(sum(i)/len(i), 9))
with open('2.txt', 'w') as file_object:
    for i in average_rating:
        file_object.write(str(i) + '\n')
    file_object.write(str(mat_s) + ' ' + str(fiz_s) + ' ' + str(rus_s))
